using System;
using System.Collections.Generic;


namespace Lab_11
{
    class Program
    {
        static void Main(string[] args)
        {
            College coll = new College();

            coll.AddBacalaver("Ali" ,5);
            coll.AddMegistr("Ahmed", 4);
            coll.AddAspirant("salah", 3);

       
            coll.Delete(1);
            coll.output();
            Console.WriteLine();


            coll.changeName(1 , "noura");
            coll.changeChorus(1, 4);
            coll.output();

        }
    }
    class College
    {
       
        List<student> students = new List<student>();

        public void AddBacalaver(string name, int Chorus)
        {

            students.Add(new Bacala(name));
        }

        public void AddBacalaver(int Chorus)
        {

            students.Add(new Bacala(Chorus));
        }



        public void AddMegistr(string name, int Chorus)
        {
            students.Add(new Megr(name));
        }



        public void AddMegistr(int Chorus)
        {
            students.Add(new Megr(Chorus));
        }


        public void AddAspirant(string name , int Chorus)
        {
            students.Add(new Aspi(name));
        }


        public void AddAspirant(int Chorus)
        {
            students.Add(new Aspi(Chorus));
        }


        public void changeName (int index, string name)
        {
            students[index].change(name);
        }

        public void changeChorus (int index, int Chorus)
        {
            students[index].change(Chorus);
        }


     



        public void Delete (int index )
        {
            students.RemoveAt(index);
        }

        public void output()
        {
            Console.WriteLine("****************");
             foreach (var i in students)
             {
                
                 Console.WriteLine($"{i.Name}");
                 Console.WriteLine($"{i.Chorus}");
             }



            Console.WriteLine("****************");
        }
    }

    abstract class student
    {

        private string name;
        private int chorus;

        public string Name
        {
            get { return name; }
            set { name = value; }
        }

        public int Chorus
        {
            get { return chorus; }
            set { chorus = value; }

        }

        public student(string name)
        {
            this.name = name;
        }

        public student(int chorus)
        {
            this.chorus = chorus;
        }

        public abstract string change(string name);
        public abstract int change(int chorus);

        internal void output()
        {
           
        }
    }


    class Bacala : student
    {
        public Bacala(string name) : base(name){}
        public override string change(string name)
        {
            Name = name;
            return Name;
        }

        public Bacala(int chorus) : base(chorus) { }
        public override int change(int chorus)
        {
            Chorus = chorus;
            return Chorus;
        }

    }

    class Megr : student
    {
        public Megr(string name) : base(name) { }

        public override string change(string name)
        {
            Name = name;
            return Name;
        }


        public Megr(int chorus) : base(chorus) { }
        public override int change(int chorus)
        {
            Chorus = chorus;
            return Chorus;
        }

    }

    class Aspi : student
    {
        public Aspi(string name) : base(name) { }
        public override string change(string name)
        {
            Name = name;
            return Name;
        }


        public Aspi(int chorus) : base(chorus) { }
        public override int change(int chorus)
        {
            Chorus = chorus;
            return Chorus;
        }

    }




}
****************************************************************************************************************************************************************************

using System;
using System.Collections.Generic;


namespace Lab_11
{
    class Program
    {
        

        static void Main(string[] args)
        {

            // انشاء فئة جديده 
            College coll = new College();

            Console.WriteLine("IN This college now:");


            coll.AddBacalaver("Ali" ,5);
            coll.AddMegistr("Ahmed", 4);
            coll.AddAspirant("salah", 3);
            coll.output();

            Console.WriteLine("Choose one: \n0 - Repeat me\n1 - Add to colloge (name - Chours)\n2");

            int Change = 1;

            while (Change != 8)
            {
                Change = Convert.ToInt32(Console.ReadLine());

                if (Change < 0 | Change > 8)
                {
                    Console.WriteLine("this is not the rally name");
                    continue;
                }

                switch (Change)
                {

                    case 0:
                        Console.WriteLine("Choose one: \n0 - Repeat me\n1 - Add to colloge (name - Chours)\n2");
                        break;

                    case 1:
                        Console.WriteLine("Bacalaver: ");
                        string str = Console.ReadLine();
                        string[] words = str.Split(' ') ;
                        coll.AddBacalaver(words[0], Convert.ToInt32(words[1]));
                        break;

                    case 2:
                        Console.WriteLine("Master: ");
                        string str2 = Console.ReadLine();
                        string[] words2 = str2.Split(' ');
                        coll.AddMegistr(words2[0], Convert.ToInt32(words2[1]));
                        break;

                    case 3:
                        Console.WriteLine("Bacalaver: ");
                        string str3 = Console.ReadLine();
                        string[] words3 = str3.Split(' ');
                        coll.AddAspirant(words3[0], Convert.ToInt32(words3[1]));
                        break;

                    case 4:
                        Console.WriteLine("LUCK student: ");
                        coll.Delete(Convert.ToInt32(Console.ReadLine()));
                        break;


                    case 5:
                        Console.WriteLine("Change name: ");
                        string str5 = Console.ReadLine();
                        string[] words5 = str5.Split(' ');
                        coll.ChangeName(Convert.ToInt32(words5[0]), words5[1]);
                        break;

                    case 6:
                        Console.WriteLine("Change Chours: ");
                        string str6 = Console.ReadLine();
                        string[] words6 = str6.Split(' ');
                        coll.ChangeChorus(Convert.ToInt32(words6[0]), Convert.ToInt32(words6[1]));
                        break;


                    case 7:
                        coll.output();
                        break;
                }
            }

            
 

        }
    }

    class College
    {
       
        List<student> students = new List<student>();

        public void AddBacalaver(string name, int Chorus)
        {

            students.Add(new Bacala(name, Chorus));
        }

        



        public void AddMegistr(string name, int Chorus)
        {
            students.Add(new Megr(name, Chorus));
        }





        public void AddAspirant(string name , int Chorus)
        {
            students.Add(new Aspi(name, Chorus));
        }



        public void ChangeName (int index, string name)
        {
            students[index].changeName(name);
        }

        public void ChangeChorus (int index, int Chorus)
        {
            students[index].ChangeChorus(Chorus);
        }

        //ChangeChorus
        //ChangeChorus
        public void Delete(int index)
        {
            students.RemoveAt(index);
        }


     


        // الناتج النهاىي output 
        

        public void output()
        {
            Console.WriteLine("****************");

            for (int i = 0; i < students.Count; i++)
            {
                students[i].output();
            }


            Console.WriteLine("****************");
        }
    }


    // class  فصل لنوع الطالب كاكل 
    abstract class student
    {

        string name;
         int Chorus;

        public student()
        {
            this.name = "Noname";
            this.Chorus = 1;
        }

        public student(string name, int Chorus)
        {
            this.name = name;
            this.Chorus = Chorus;
        }

        public int Chours
        {
            get { return Chorus; }
            set { Chorus = value; }
        }



        public string changeName(string name)
        {
            this.name = name;
            return this.name;
        }
     
        public abstract int ChangeChorus(int value);

        public void output()
        {
            string str = $"{this}";
            Console.WriteLine($"{str.Remove(0,5)} \t Famull: {name} \t  Chours: {Chorus}");


        }
    }


    class Bacala : student
    {
        public Bacala(string name, int Chorus) : base(name, Chorus)
        {
            if (Chorus > 0 & Chorus < 5)
            {
                this.Chours = Chours;
            }
            else
            {
                Chours = 4;
            }
        }



        
        public override int ChangeChorus(int value)
        {
           if (value > 0 & value < 5)
            {
                Chours = value;
            }
            else
            {
                Chours = 4;
                return Chours;
            }
        }

       

    }

    class Megr : student
    {
        public Megr(string name, int Chorus) : base(name, Chorus)
        {
            if (Chorus > 0 & Chorus < 3)
            {
                this.Chours = Chours;
            }
            else
            {
                Chours = 2;
            }
        }
        



        public override int ChangeChorus(int value)
        {
            if (value > 0 & value < 3)
            {
                Chours = value;
            }
            else
            {
                Chours = 2;
                return Chours;
            }
        }


        

    }

    class Aspi : student
    {
        public Aspi(string name, int Chours) : base(name, Chours)
        {
            if (Chours > 0 & Chours < 4)
            {
                this.Chours = Chours;
            }
            else
            {
                Chours = 3;
            }
        }


        public override int ChangeChorus(int value)
        {
            if (value > 0 & value < 4)
            {
                Chours = value;
                
            }
            else
            {
                Chours = 3;
                return Chours;
            }
        }


     

    }

}
**************************************************************************************************************************************************************************

using System;
using System.Collections.Generic;
using System.IO.Pipes;

namespace Lab_11_2
{
    class Program
    {
        static void Main(string[] args)
        {
            College Coll = new College();


            // اساكي الطلاب الي في االكلية 
            Coll.AddBacalaver("Ali 2");
            Coll.AddMegistr("Ahmed 3");
            Coll.AddAspirant("Noura 4");


            Console.BackgroundColor = ConsoleColor.Black;
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Write("In the College Now..... \n ");
            Console.WriteLine("*********************************");
            Console.WriteLine("Bacaclaver\t" + "Ali" );
            Console.WriteLine("Megiste\t\t"    + "Ahmed");
            Console.WriteLine("Aspirant\t"   + "Noura");
            Console.WriteLine("*********************************");
            

            for (int i = 0; i == 0; i = 0)
            {
                Console.BackgroundColor = ConsoleColor.Black;
                Console.ForegroundColor = ConsoleColor.Red;

               
                // دي الحاجات المطلوب عملها 
                Console.WriteLine("\nChoose an action\n" +
                    "\n(1)_add an object \n"+
                    "(2)_Remove an object \n"+
                    "(3)_Display \n"+
                    "(4)_Make changes \n"+
                    "(5)_Exit from the program");


                Console.BackgroundColor = ConsoleColor.Black;
                Console.ForegroundColor = ConsoleColor.Yellow;

                int str = Convert.ToInt32(Console.ReadLine());

               

                if (str == 5)
                {
                    Console.WriteLine("Go out (_Exit_)");
                }

                if (str == 1)
                {
                    Console.WriteLine("Choose the academic stage: \n" +
                        "(1)_Bacalaver\n" +
                        "(2)_AddMegistr\n" +
                        "(3)_AddAspirant");


                    string num = Console.ReadLine();

                    switch (num)
                    {
                        case "1":
                            Console.WriteLine("You have chosen Bacalaver");
                            Console.Write("The Name");
                            string name = Console.ReadLine();
                            Bacala b = new Bacala(name);
                            Coll.AddBacalaver(name);
                            break;


                        case "2":
                            Console.WriteLine("You have chosen Megistr ");
                            Console.Write("The Name:  ");
                            name = Console.ReadLine();
                            Megi m = new Megi(name);
                            Coll.AddMegistr(name);
                            break;

                        case "3":

                            Console.WriteLine("You have chosen Aspirant ");
                            Console.Write("The Name:  ");
                            name = Console.ReadLine();

                            Aspir a = new Aspir(name);
                            Coll.AddAspirant(name);
                            break;


                        default:
                            Console.Write("The name is not hear ");
                            break;



                    }

                }

                if (str == 2)
                {
                    Console.WriteLine("Choose the number that you want to see");
                    Console.Write("number =");
                    int num = Convert.ToInt32(Console.ReadLine());
                    Coll.remove(num - 1);
                }



                if (str == 3)
                {
                    Coll.output();
                }

                if (str == 4)
                {
                    Console.WriteLine("Choose the number that you want to see");
                    Console.Write("Number = ");
                    int num = Convert.ToInt32(Console.ReadLine());
                    int n = (num - 1);

                    Console.WriteLine("Choose the Name that you want to see");
                    string name = Console.ReadLine();
                    Coll.changeFiled(n, name);
                }

                Console.WriteLine();


            }
        }
    }
}


// اول فصل الي خهي الكلية 
class College
{
    List<student> students = new List<student>();

    // عمل اضافة
    public void AddBacalaver(string name)
    {
        students.Add(new Bacala(name));
    }


    public void AddMegistr(string name)
    {
        students.Add(new Megi(name));
    }

    public void AddAspirant(string name)
    {
        students.Add(new Aspir(name));
    }
    // هعمل تغير 
    public void changeFiled(int index, string name)
    {
        students[index].change(name);
    }
    //Removal
    //هعمل ازاله 
     
    public void remove(int index)
    {
        students.RemoveAt(index);
    }


    // الناتج النعاىي

    public void output()
    {
        foreach(var i in students)
        {
            Console.WriteLine($"{i.Name}");
        }
    }
}


// فصل جديد ل الطالب
 abstract class student
{
    private string name;

    public string Name
    {
        get { return name; }
        set { name = value; }
    }

    public student(string name)
    {
        this.name = name;
    }

    public abstract string change(string name );
    
}

class Bacala : student
{
    public Bacala(string name) : base(name) { }

    // هنا تغير 
    public override string change(string name)
    {
        Name = name;
        return Name;
    }
}


class Megi : student
{
    public Megi(string name): base(name) { }

    public override string change(string name)
    {
        Name = name;
        return Name;
    }
}

class Aspir : student
{
    public Aspir(string name): base(name) { }

    public override string change(string name)
    {
        Name = name;
        return Name;
    }
}
